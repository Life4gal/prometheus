# --------------------------------------------------------------
# PLATFORM

if (${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	set(${PROJECT_NAME_PREFIX}PLATFORM_WINDOWS ON)
	set(${PROJECT_NAME_PREFIX}PLATFORM_NAME ${PROJECT_NAME_PREFIX}PLATFORM_WINDOWS)
elseif (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	set(${PROJECT_NAME_PREFIX}PLATFORM_LINUX ON)
	set(${PROJECT_NAME_PREFIX}PLATFORM_NAME ${PROJECT_NAME_PREFIX}PLATFORM_LINUX)
elseif (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
	set(${PROJECT_NAME_PREFIX}PLATFORM_DARWIN ON)
	set(${PROJECT_NAME_PREFIX}PLATFORM_NAME ${PROJECT_NAME_PREFIX}PLATFORM_DARWIN)
else ()
	message(FATAL_ERROR "[PROMETHEUS] Unknown Platform: ${CMAKE_SYSTEM_NAME}")
endif (${CMAKE_SYSTEM_NAME} MATCHES "Windows")

# --------------------------------------------------------------
# COMPILER

if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
	set(${PROJECT_NAME_PREFIX}COMPILER_MSVC ON)
	set(${PROJECT_NAME_PREFIX}COMPILER_NAME "MSVC")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
	if (CMAKE_CXX_SIMULATE_ID STREQUAL "MSVC")
		set(${PROJECT_NAME_PREFIX}COMPILER_CLANG_CL ON)
		set(${PROJECT_NAME_PREFIX}COMPILER_NAME "ClangCL")
	else ()
		set(${PROJECT_NAME_PREFIX}COMPILER_CLANG ON)
		set(${PROJECT_NAME_PREFIX}COMPILER_NAME "Clang")
	endif (CMAKE_CXX_SIMULATE_ID STREQUAL "MSVC")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
	set(${PROJECT_NAME_PREFIX}COMPILER_GNU ON)
	set(${PROJECT_NAME_PREFIX}COMPILER_NAME "GNU")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "AppleClang")
	set(${PROJECT_NAME_PREFIX}COMPILER_CLANG_APPLE ON)
	set(${PROJECT_NAME_PREFIX}COMPILER_NAME "AppleClang")
else ()
	message(FATAL_ERROR "[PROMETHEUS] Unknown compiler: ${CMAKE_CXX_COMPILER}")
endif (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")

set(${PROJECT_NAME_PREFIX}COMPILER_VERSION ${CMAKE_CXX_COMPILER_VERSION})
set(${PROJECT_NAME_PREFIX}COMPILER_FULL_NAME ${${PROJECT_NAME_PREFIX}COMPILER_NAME}.${${PROJECT_NAME_PREFIX}COMPILER_VERSION})
